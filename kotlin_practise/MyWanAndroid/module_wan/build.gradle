if (isModule) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.hujiang.android-aspectjx'

android {

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        if (!isModule) {
            applicationId "com.tao.module_wan"
        }
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildFeatures {
        viewBinding true
    }

    sourceSets {
        main {
            if (isModule) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    exclude '*module'
                }
            } else {
                java.srcDirs 'src/main/java', 'src/main/module/java'
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    aspectjx { exclude 'versions.9' }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
        arg("DAGGER_VIEW_BINDING_FEATURE", "databinding")
        arg("DAGGER_VIEW_MODEL_FEATURE", "viewmodel")
        arg("DAGGER_ADAPTER_FEATURE", "adapter")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':module_base')
    kapt compilerDependencies
}